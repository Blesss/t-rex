# t-rex configuration for http://osm2vectortiles.org/
# based on https://github.com/osm2vectortiles/osm2vectortiles/blob/9009927/osm2vectortiles.tm2source/data.yml

[service.mvt]
viewer = true

[datasource]
type = "postgis"
url = "postgresql://pi@localhost/osm2vectortiles"

[grid]
predefined = "web_mercator"

[[tileset]]
name = "osm2vectortiles"

[[tileset.layer]]
name = "landuse"
geometry_field = "geometry"
geometry_type = "POLYGON"
fid_field = "osm_id"
buffer_size = 4
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(MAX(osm_id), true) AS osm_id, ST_CollectionExtract(ST_Collect(geometry), 3) AS geometry, landuse_class(type) AS class, type
    FROM (
      SELECT osm_id, geometry, type
      FROM landuse_z5toz6
      WHERE !zoom! BETWEEN 5 AND 6
      UNION ALL
      SELECT osm_id, geometry, type
      FROM landuse_z7toz8
      WHERE !zoom! BETWEEN 7 AND 8
    ) AS landuse_z5toz8
    WHERE geometry && !bbox!
    GROUP BY type
    UNION ALL
    SELECT
      osm_ids2mbid(osm_id, true) AS osm_id, geometry,
      landuse_class(type) AS class, type
      FROM (
        SELECT osm_id, geometry, type
        FROM landuse_z9
        WHERE !zoom! = 9
        UNION ALL
        SELECT osm_id, geometry, type
        FROM landuse_z10
        WHERE !zoom! = 10
        UNION ALL
        SELECT osm_id, geometry, type
        FROM landuse_z11
        WHERE !zoom! = 11
        UNION ALL
        SELECT osm_id, geometry, type
        FROM landuse_z12
        WHERE !zoom! = 12
        UNION ALL
        SELECT osm_id, geometry, type
        FROM landuse_z13toz14
        WHERE !zoom! BETWEEN 13 AND 14
      ) AS landuse_z9toz14
      WHERE geometry && !bbox!
    """

[[tileset.layer]]
name = "waterway"
geometry_field = "geometry"
geometry_type = "LINESTRING"
fid_field = "osm_id"
buffer_size = 4
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, false) AS osm_id, geometry, type, type AS class
    FROM (
      SELECT *
      FROM waterway_z7toz9
      WHERE !zoom! BETWEEN 7 AND 9
      UNION ALL
      SELECT *
      FROM waterway_z10toz12
      WHERE !zoom! BETWEEN 10 AND 12
      UNION ALL
      SELECT *
      FROM waterway_z13
      WHERE !zoom! = 13
      UNION ALL
      SELECT *
      FROM waterway_z14
      WHERE !zoom! = 14
    ) AS waterway
    WHERE geometry && !bbox!
    """

[[tileset.layer]]
name = "water"
geometry_field = "geometry"
geometry_type = "POLYGON"
fid_field = "osm_id"
buffer_size = 8
    [[tileset.layer.query]]
    sql = """
    SELECT
      osm_ids2mbid(osm_id, true) AS osm_id,
      CASE WHEN ST_Area(geometry) > 10000000 AND osm_id <> 0
           THEN ST_Intersection(ST_MakeValid(geometry), !bbox!)
           ELSE geometry
      END AS geometry
    FROM (
      SELECT osm_id, geometry
      FROM water_z0
      WHERE !zoom! = 0
      UNION ALL
      SELECT osm_id, geometry
      FROM water_z1
      WHERE !zoom! = 1
      UNION ALL
      SELECT osm_id, geometry
      FROM water_z2toz3
      WHERE !zoom! BETWEEN 2 AND 3
      UNION ALL
      SELECT osm_id, geometry
      FROM water_z4
      WHERE !zoom! = 4
      UNION ALL
      SELECT osm_id, geometry
      FROM water_z5toz7
      WHERE !zoom! BETWEEN 5 AND 7
      UNION ALL
      SELECT osm_id, geometry
      FROM water_z8toz10
      WHERE !zoom! BETWEEN 8 AND 10
      UNION ALL
      SELECT osm_id, geometry
      FROM water_z11toz12
      WHERE !zoom! BETWEEN 11 AND 12
      UNION ALL
      SELECT osm_id, geometry
      FROM water_z13toz14
      WHERE !zoom! BETWEEN 13 AND 14
    ) AS water
    WHERE geometry && !bbox!
    """

[[tileset.layer]]
name = "aeroway"
geometry_field = "geometry"
geometry_type = "POLYGON"
fid_field = "osm_id"
buffer_size = 4
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, is_polygon(geometry)) AS osm_id, geometry, type
    FROM (
      SELECT *
      FROM aeroway_z9
      WHERE !zoom! = 9
      UNION ALL
      SELECT *
      FROM aeroway_z10toz14
      WHERE !zoom! BETWEEN 10 AND 14
    ) AS aeroway
    WHERE geometry && !bbox!
      AND GeometryType(geometry)='POLYGON'
    """

# NOTE: aeroway layer in osm2vectortiles has mixed LINESTRING and POLYGON geometries
[[tileset.layer]]
name = "aeroway_lines"
geometry_field = "geometry"
geometry_type = "LINESTRING"
fid_field = "osm_id"
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, is_polygon(geometry)) AS osm_id, geometry, type
    FROM (
      SELECT *
      FROM aeroway_z9
      WHERE !zoom! = 9
      UNION ALL
      SELECT *
      FROM aeroway_z10toz14
      WHERE !zoom! BETWEEN 10 AND 14
    ) AS aeroway
    WHERE geometry && !bbox!
      AND GeometryType(geometry)='LINESTRING'
    """

[[tileset.layer]]
name = "barrier_line"
geometry_field = "geometry"
geometry_type = "LINESTRING"
fid_field = "osm_id"
buffer_size = 4
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, is_polygon(geometry)) AS osm_id, geometry, barrier_line_class(type) AS class
    FROM barrier_line_z14
    WHERE geometry && !bbox!
      AND !zoom! = 14
    """

[[tileset.layer]]
name = "building"
geometry_field = "geometry"
geometry_type = "POLYGON"
fid_field = "osm_id"
buffer_size = 2
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, geometry, building_is_underground(underground) AS underground
    FROM (
      SELECT osm_id, geometry, underground
      FROM building_z13
      WHERE !zoom! = 13
      UNION ALL
      SELECT osm_id, geometry, underground
      FROM building_z14
      WHERE !zoom! = 14
    ) AS building
    WHERE geometry && !bbox!
    ORDER BY ST_YMin(ST_Envelope(geometry)) DESC
    """

[[tileset.layer]]
name = "landuse_overlay"
geometry_field = "geometry"
geometry_type = "POLYGON"
fid_field = "osm_id"
buffer_size = 8
    [[tileset.layer.query]]
    sql = """
    SELECT
      osm_ids2mbid(osm_id, true) AS osm_id,
      CASE WHEN ST_Area(geometry) > 10000000
           THEN ST_Intersection(ST_MakeValid(geometry), !bbox!)
           ELSE geometry
      END AS geometry,
      landuse_overlay_class(type) AS class, type
    FROM (
      SELECT osm_id, geometry, type FROM landuse_overlay_z5
      WHERE !zoom! = 5
      UNION ALL
      SELECT osm_id, geometry, type FROM landuse_overlay_z6
      WHERE !zoom! = 6
      UNION ALL
      SELECT osm_id, geometry, type FROM landuse_overlay_z7
      WHERE !zoom! = 7
      UNION ALL
      SELECT osm_id, geometry, type FROM landuse_overlay_z8
      WHERE !zoom! = 8
      UNION ALL
      SELECT osm_id, geometry, type FROM landuse_overlay_z9
      WHERE !zoom! = 9
      UNION ALL
      SELECT osm_id, geometry, type FROM landuse_overlay_z10
      WHERE !zoom! = 10
      UNION ALL
      SELECT osm_id, geometry, type FROM landuse_overlay_z11toz12
      WHERE !zoom! BETWEEN 11 AND 12
      UNION ALL
      SELECT osm_id, geometry, type FROM landuse_overlay_z13toz14
      WHERE !zoom! BETWEEN 13 AND 14
    ) AS landuse_overlay
    WHERE geometry && !bbox!
    """

[[tileset.layer]]
name = "road"
geometry_field = "geometry"
geometry_type = "LINESTRING"
fid_field = "osm_id"
buffer_size = 4
    [[tileset.layer.query]]
    sql = """
    SELECT osm_id, geometry, type, class, oneway, structure FROM (
        SELECT osm_ids2mbid(MAX(osm_id), false) AS osm_id, ST_CollectionExtract(ST_Collect(geometry), 2) AS geometry,
        road_type(road_class(type, NULL, NULL), type, NULL, NULL, NULL) AS type,
        road_class(type, NULL, NULL) AS class, road_oneway(0) AS oneway, 'none' AS structure, NULL AS z_order
        FROM (
          SELECT * FROM road_z5
          WHERE !zoom! = 5
          UNION ALL
          SELECT * FROM road_z6toz7
          WHERE !zoom! BETWEEN 6 AND 7
          UNION ALL
          SELECT * FROM road_z8toz9
          WHERE !zoom! BETWEEN 8 AND 9
          UNION ALL
          SELECT * FROM road_z10
          WHERE !zoom! = 10
        ) AS road_grouped_zoom_levels
        WHERE geometry && !bbox!
          GROUP BY type
        UNION ALL
        SELECT osm_ids2mbid(osm_id, is_polygon(geometry)) AS osm_id, geometry,
        road_type(road_class(type, service, access), type, construction, tracktype, service) AS type,
        road_class(type, service, access) AS class, road_oneway(oneway) AS oneway, structure, z_order
         FROM (
          SELECT * FROM road_z11
          WHERE !zoom! = 11
          UNION ALL
          SELECT * FROM road_z12
          WHERE !zoom! = 12
          UNION ALL
          SELECT * FROM road_z13
          WHERE !zoom! = 13
          UNION ALL
          SELECT * FROM road_z14
          WHERE !zoom! = 14
         ) AS t2
        WHERE geometry && !bbox!
        ORDER BY z_order ASC
     ) AS ordered_roads
    """

[[tileset.layer]]
name = "admin"
geometry_field = "geometry"
geometry_type = "MULTILINESTRING"
fid_field = "osm_id"
buffer_size = 4
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, false) AS osm_id, geometry, admin_level, disputed, maritime
    FROM (
      SELECT osm_id, geometry, admin_level, disputed, maritime
      FROM admin_z0
      WHERE !zoom! = 0
      UNION ALL
      SELECT osm_id, geometry, admin_level, disputed, maritime
      FROM admin_z1
      WHERE !zoom! = 1
      UNION ALL
      SELECT osm_id, geometry, admin_level, disputed, maritime
      FROM admin_z2
      WHERE !zoom! = 2
      UNION ALL
      SELECT osm_id, geometry, admin_level, disputed, maritime
      FROM admin_z3
      WHERE !zoom! = 3
      UNION ALL
      SELECT osm_id, geometry, admin_level, disputed, maritime
      FROM admin_z4toz5
      WHERE !zoom! BETWEEN 4 AND 5
      UNION ALL
      SELECT osm_id, geometry, admin_level, disputed, maritime
      FROM admin_z6
      WHERE !zoom! = 6
      UNION ALL
      SELECT osm_id, geometry, admin_level, disputed, maritime
      FROM admin_z7toz14
      WHERE !zoom! BETWEEN 7 AND 14
    ) AS admin
    WHERE geometry && !bbox!
    """

[[tileset.layer]]
name = "country_label"
geometry_field = "wkb_geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 256
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, wkb_geometry,
    iso3166_1_alpha_2 AS code,
    name,
    coalesce(NULLIF(name_en, ''), name) AS name_en,
    coalesce(NULLIF(name_es, ''), name) AS name_es,
    coalesce(NULLIF(name_fr, ''), name) AS name_fr,
    coalesce(NULLIF(name_de, ''), name) AS name_de,
    coalesce(NULLIF(name_ru, ''), name) AS name_ru,
    coalesce(NULLIF(name_zh, ''), name) AS name_zh, 
    rank AS scalerank
    FROM custom_countries
    WHERE (
      (
        rank <= 1
        AND !zoom! = 1 AND wkb_geometry && !bbox!
      )
      OR
      (
        rank <= 2
        AND !zoom! >= 2 AND wkb_geometry && !bbox!
      )
      OR
      (
        rank <= 4
        AND !zoom! >= 3 AND wkb_geometry && !bbox!
      )
      OR
      (
        rank <= 5
        AND !zoom! >= 4 AND wkb_geometry && !bbox!
      )
      OR
      (
        rank <= 6
        AND !zoom! >= 5 AND wkb_geometry && !bbox!
      )
      OR
      (
        rank >= 7
        AND !zoom! >= 6 AND wkb_geometry && !bbox!
      )
    )
    """

[[tileset.layer]]
name = "marine_label"
geometry_field = "wkb_geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 256
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, wkb_geometry,
    name,
    coalesce(NULLIF(name_en, ''), name) AS name_en,
    coalesce(NULLIF(name_es, ''), name) AS name_es,
    coalesce(NULLIF(name_fr, ''), name) AS name_fr,
    coalesce(NULLIF(name_de, ''), name) AS name_de,
    coalesce(NULLIF(name_ru, ''), name) AS name_ru,
    coalesce(NULLIF(name_zh, ''), name) AS name_zh, 
    case when ST_GeometryType(wkb_geometry) = 'ST_LineString' then 'line'
         else 'point' end AS placement,
    rank AS labelrank
    FROM custom_seas
    WHERE wkb_geometry && !bbox! AND (
      (
        rank = 1 AND !zoom! >= 1
      )
      OR (
        rank = 2 AND !zoom! >= 2
      )
      OR (
        rank = 3 AND !zoom! >= 3
      )
      OR (
        rank = 4 AND !zoom! >= 4
      )
      OR (
        rank = 5 AND !zoom! >= 5
      )
      OR (
        rank = 6 AND !zoom! >= 6
      )
    )
    """

[[tileset.layer]]
name = "state_label"
geometry_field = "wkb_geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 256
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, wkb_geometry, abbr,
    area_sqkm AS area,
    name,
    coalesce(NULLIF(name_en, ''), name) AS name_en,
    coalesce(NULLIF(name_es, ''), name) AS name_es,
    coalesce(NULLIF(name_fr, ''), name) AS name_fr,
    coalesce(NULLIF(name_de, ''), name) AS name_de,
    coalesce(NULLIF(name_ru, ''), name) AS name_ru,
    coalesce(NULLIF(name_zh, ''), name) AS name_zh
    FROM custom_states
    WHERE wkb_geometry && !bbox! AND (
      (
        area_sqkm > 90000 AND !zoom! >= 4
      )
      OR (
        !zoom! >= 5
      )
    )
    """

[[tileset.layer]]
name = "place_label"
geometry_field = "geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 128
    [[tileset.layer.query]]
    sql = """
    SELECT * FROM (
        SELECT osm_ids2mbid(osm_id, true) as osm_id, topoint(geometry) AS geometry,
        name,
        coalesce(NULLIF(name_en, ''), name) AS name_en,
        coalesce(NULLIF(name_es, ''), name) AS name_es,
        coalesce(NULLIF(name_fr, ''), name) AS name_fr,
        coalesce(NULLIF(name_de, ''), name) AS name_de,
        coalesce(NULLIF(name_ru, ''), name) AS name_ru,
        coalesce(NULLIF(name_zh, ''), name) AS name_zh,
        type,
        CASE WHEN is_capital THEN 2 ELSE capital END AS capital,
        NULL AS ldir,
        normalize_scalerank(scalerank) AS scalerank,
        row_number() OVER (PARTITION BY LabelGrid(geometry, (85 * !pixel_width!::float)::numeric)
                     ORDER BY scalerank ASC NULLS LAST,
                              population DESC NULLS LAST
        ) AS localrank
        FROM (
            SELECT * FROM place_label_z3
            WHERE !zoom! = 3
            UNION ALL
            SELECT * FROM place_label_z4
            WHERE !zoom! = 4
            UNION ALL
            SELECT * FROM place_label_z5
            WHERE !zoom! = 5
            UNION ALL
            SELECT * FROM place_label_z6toz7
            WHERE !zoom! BETWEEN 6 AND 7
            UNION ALL
            SELECT * FROM place_label_z8
            WHERE !zoom! = 8
            UNION ALL
            SELECT * FROM place_label_z9
            WHERE !zoom! = 9
            UNION ALL
            SELECT * FROM place_label_z10
            WHERE !zoom! = 10
            UNION ALL
            SELECT * FROM place_label_z11toz12
            WHERE !zoom! BETWEEN 11 AND 12
            UNION ALL
            SELECT * FROM place_label_z13
            WHERE !zoom! = 13
            UNION ALL
            SELECT * FROM place_label_z14
            WHERE !zoom! = 14
          ) AS place_label
        WHERE geometry && !bbox!
        ORDER BY population DESC NULLS LAST
    ) AS t WHERE !zoom! >= 11
              OR (!zoom! = 10 AND localrank < 6)
              OR (!zoom! = 9 AND localrank < 8)
              OR (!zoom! = 8 AND localrank < 12)
              OR (!zoom! = 7 AND localrank < 12)
              OR (!zoom! = 6 AND localrank < 8)
              OR !zoom! <= 5
    """

[[tileset.layer]]
name = "water_label"
geometry_field = "geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 24
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, geometry AS geometry,
    name,
    area,
    coalesce(NULLIF(name_en, ''), name) AS name_en,
    coalesce(NULLIF(name_es, ''), name) AS name_es,
    coalesce(NULLIF(name_fr, ''), name) AS name_fr,
    coalesce(NULLIF(name_de, ''), name) AS name_de,
    coalesce(NULLIF(name_ru, ''), name) AS name_ru,
    coalesce(NULLIF(name_zh, ''), name) AS name_zh
    FROM (
      SELECT * FROM water_label_z10
      WHERE !zoom! = 10
      UNION ALL
      SELECT * FROM water_label_z11
      WHERE !zoom! = 11
      UNION ALL
      SELECT * FROM water_label_z12
      WHERE !zoom! = 12
      UNION ALL
      SELECT * FROM water_label_z13
      WHERE !zoom! = 13
      UNION ALL
      SELECT * FROM water_label_z14
      WHERE !zoom! = 14
    ) AS water_label
    WHERE geometry && !bbox!
    """

[[tileset.layer]]
name = "poi_label"
geometry_field = "geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 64
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, topoint(geometry) AS geometry, ref, name,
        coalesce(NULLIF(name_en, ''), name) AS name_en,
        coalesce(NULLIF(name_es, ''), name) AS name_es,
        coalesce(NULLIF(name_fr, ''), name) AS name_fr,
        coalesce(NULLIF(name_de, ''), name) AS name_de,
        coalesce(NULLIF(name_ru, ''), name) AS name_ru,
        coalesce(NULLIF(name_zh, ''), name) AS name_zh,
        format_type(type) AS type,
        CASE WHEN name = '' THEN NULL
             ELSE poi_label_scalerank(type, area)
        END AS scalerank,
        coalesce(NULLIF(maki_label_class(type), ''), 'marker') AS maki,
        rank() OVER (PARTITION BY LabelGrid(geometry, (128 * !pixel_width!::float)::numeric)
                     ORDER BY poi_label_localrank(type, name) ASC) AS localrank
      FROM poi_label_z14
      WHERE !zoom! = 14
        AND geometry && !bbox!
    """

[[tileset.layer]]
name = "road_label"
geometry_field = "geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 8
    [[tileset.layer.query]]
    sql = """
      SELECT * FROM
      (
      SELECT osm_ids2mbid(osm_id, false) AS osm_id,
        CASE WHEN !zoom! < 11
             THEN st_startpoint(geometry)
             ELSE geometry
        END AS geometry,
        name,
        coalesce(NULLIF(name_en, ''), name) AS name_en,
        coalesce(NULLIF(name_es, ''), name) AS name_es,
        coalesce(NULLIF(name_fr, ''), name) AS name_fr,
        coalesce(NULLIF(name_de, ''), name) AS name_de,
        coalesce(NULLIF(name_ru, ''), name) AS name_ru,
        coalesce(NULLIF(name_zh, ''), name) AS name_zh,
        nullif(ref, '') AS ref,
        nullif(char_length(ref), 0) AS reflen,
        round(MercLength(geometry)) AS len,
        road_class(type, service, access) AS class,
        'default'::text AS shield,
        rank() OVER (
            PARTITION BY LabelGrid(geometry, ((CASE WHEN !zoom! >= 11
                                                   THEN 300
                                                   ELSE 200 
                                               END) * !pixel_width!::float)::numeric)
            ORDER BY road_localrank(type) ASC, round(MercLength(geometry)) DESC
        ) AS localrank
        FROM (
          SELECT * FROM road_label_z8toz10
          WHERE !zoom! BETWEEN 8 AND 10
          UNION ALL
          SELECT * FROM road_label_z11
          WHERE !zoom! = 11
          UNION ALL
          SELECT * FROM road_label_z12toz13
          WHERE !zoom! BETWEEN 12 AND 13
          UNION ALL
          SELECT * FROM road_label_z14
          WHERE !zoom! = 14
        ) AS road_label
        WHERE geometry && !bbox!
          AND ST_GeometryType(geometry) = 'ST_LineString'
      ) AS t1
      WHERE (!zoom! BETWEEN 8 AND 10 AND localrank < 2)
         OR (!zoom! BETWEEN 11 AND 12 AND localrank < 5)
         OR (!zoom! BETWEEN 13 AND 14)
    """

[[tileset.layer]]
name = "motorway_junction"
geometry_field = "geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 8
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id,
    geometry,
    name,
    NULLIF(ref, '') AS ref,
    NULLIF(char_length(ref), 0) AS reflen,
    junction_type(type) AS type,
    road_type_class(junction_type(type)) AS class
    FROM (
      SELECT * FROM motorway_junction_z12toz14
      WHERE !zoom! BETWEEN 12 AND 14
    ) AS t
    WHERE geometry && !bbox!
    """

[[tileset.layer]]
name = "waterway_label"
geometry_field = "geometry"
geometry_type = "LINESTRING"
fid_field = "osm_id"
buffer_size = 8
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, false) AS osm_id, geometry, name,
    coalesce(NULLIF(name_en, ''), name) AS name_en,
    coalesce(NULLIF(name_es, ''), name) AS name_es,
    coalesce(NULLIF(name_fr, ''), name) AS name_fr,
    coalesce(NULLIF(name_de, ''), name) AS name_de,
    coalesce(NULLIF(name_ru, ''), name) AS name_ru,
    coalesce(NULLIF(name_zh, ''), name) AS name_zh,
    type, type AS class
    FROM (
      SELECT * FROM waterway_label_z13
      WHERE !zoom! = 13
      UNION ALL
      SELECT * FROM waterway_label_z14
      WHERE !zoom! = 14
    ) AS waterway_label
    WHERE geometry && !bbox!
    AND linelabel(!zoom!, name, geometry)
    """

[[tileset.layer]]
name = "airport_label"
geometry_field = "geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 64
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, topoint(geometry) AS geometry,
    name,
    coalesce(NULLIF(name_en, ''), name) AS name_en,
    coalesce(NULLIF(name_es, ''), name) AS name_es,
    coalesce(NULLIF(name_fr, ''), name) AS name_fr,
    coalesce(NULLIF(name_de, ''), name) AS name_de,
    coalesce(NULLIF(name_ru, ''), name) AS name_ru,
    coalesce(NULLIF(name_zh, ''), name) AS name_zh,
    coalesce(NULLIF(iata, ''), NULLIF(ref, ''), NULLIF(icao, ''), faa) AS ref,
    airport_label_class(kind, type) AS maki,
    airport_label_scalerank(airport_label_class(kind, type), area, aerodrome) AS scalerank
    FROM airport_label_z9toz14
    WHERE geometry && !bbox!
    AND !zoom! BETWEEN 9 AND 14
    """

[[tileset.layer]]
name = "rail_station_label"
geometry_field = "geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 64
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, geometry,
    name,
    coalesce(NULLIF(name_en, ''), name) AS name_en,
    coalesce(NULLIF(name_es, ''), name) AS name_es,
    coalesce(NULLIF(name_fr, ''), name) AS name_fr,
    coalesce(NULLIF(name_de, ''), name) AS name_de,
    coalesce(NULLIF(name_ru, ''), name) AS name_ru,
    coalesce(NULLIF(name_zh, ''), name) AS name_zh,
    rail_station_class(type) AS maki,
    rail_station_class(type) AS network
    FROM (
      SELECT * FROM rail_station_label_z13
      WHERE !zoom! = 13
      UNION ALL
      SELECT * FROM rail_station_label_z14
      WHERE !zoom! = 14
    ) AS t
    WHERE geometry && !bbox!
    """

[[tileset.layer]]
name = "mountain_peak_label"
geometry_field = "geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 64
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, geometry,
    meter_to_feet(elevation_m) AS elevation_ft,
    elevation_m,
    mountain_peak_type(type) AS maki,
    name,
    coalesce(NULLIF(name_en, ''), name) AS name_en,
    coalesce(NULLIF(name_es, ''), name) AS name_es,
    coalesce(NULLIF(name_fr, ''), name) AS name_fr,
    coalesce(NULLIF(name_de, ''), name) AS name_de,
    coalesce(NULLIF(name_ru, ''), name) AS name_ru,
    coalesce(NULLIF(name_zh, ''), name) AS name_zh
    FROM mountain_peak_label_z12toz14
    WHERE geometry && !bbox!
      AND !zoom! BETWEEN 12 AND 14
    """

[[tileset.layer]]
name = "housenum_label"
geometry_field = "geometry"
geometry_type = "POINT"
fid_field = "osm_id"
buffer_size = 64
    [[tileset.layer.query]]
    sql = """
    SELECT osm_ids2mbid(osm_id, true) AS osm_id, topoint(geometry) AS geometry, house_num
    FROM housenum_label_z14
    WHERE geometry && !bbox!
      AND !zoom! = 14
    """

#[cache.file]
#base = "/tmp/mvtcache"

[webserver]
# Bind address. Use 0.0.0.0 to listen on all adresses.
bind = "127.0.0.1"
port = 6767
threads = 4
#cache_control_max_age = 43200
