# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

environment:
  global:
    RUST_VERSION: stable

    CRATE_NAME: t-rex

  matrix:
    # MinGW
    #- TARGET: i686-pc-windows-gnu
    #- TARGET: x86_64-pc-windows-gnu

    # MSVC
    #- TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

    # Testing other channels
    #- TARGET: x86_64-pc-windows-gnu
    #  RUST_VERSION: nightly
    #- TARGET: x86_64-pc-windows-msvc
    #  RUST_VERSION: nightly

init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V
  # - curl -Sf -o gdal-x64-core.msi http://download.gisinternals.com/sdk/downloads/release-1800-x64-gdal-2-2-1-mapserver-7-0-6/gdal-202-1800-x64-core.msi
  # - msiexec /i gdal-x64-core.msi /quiet
  # - set PATH=%PATH%;"C:\Program Files\GDAL"
  - curl -S -O http://download.gisinternals.com/sdk/downloads/release-1800-x64-dev.zip
  - 7z x release-1800-x64-dev.zip
  - set GDAL_HOME=C:\projects\t-rex\release-1800-x64
  - set GDAL_DATA=C:\projects\t-rex\release-1800-x64\bin\gdal-data
  - set PATH=%PATH%;C:\projects\t-rex\release-1800-x64\bin
  - set PATH=%PATH%;"%WIX%\bin"

test_script:
  - cargo build --all --target %TARGET% --release
  #- cargo test --no-default-features -p t-rex-core --target %TARGET%
  #- cargo test --no-default-features -p t-rex-core --target %TARGET% --release
  #- cargo run --no-default-features --target %TARGET% --release
  - cd packaging\windows
  - candle -nologo gdal.wxs
  - candle -nologo projlib.wxs
  - candle -nologo t-rex.wxs
  - light -nologo -dSourceDir="C:\projects\t-rex" -dGdalSrcDir="C:\projects\t-rex\release-1800-x64\bin" -dProjlibSrcDir="C:\projects\t-rex\release-1800-x64\bin\proj\SHARE" -sice:ICE80 -o t-rex.msi t-rex.wixobj gdal.wixobj projlib.wixobj

before_deploy:
  # TODO Update this to build the artifacts that matter to you
  - cargo rustc --no-default-features --target %TARGET% --release --bin t_rex -- -C lto
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: SBSCNxEf2bxSkYTYj95/dAkg0JZmthpcWxufEdr9AyyOXoViT3zyglUT2yfdBAlO
  description: ''
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

#branches:
#  only:
#    # Release tags
#    - /^v\d+\.\d+\.\d+.*$/
#    - master

notifications:
  - provider: Email
    on_build_success: false

# disable automatic builds
build: false

on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
